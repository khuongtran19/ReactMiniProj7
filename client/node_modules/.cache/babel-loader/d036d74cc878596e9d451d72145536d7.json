{"ast":null,"code":"import _ from 'lodash';\nimport { FETCH_STREAM, FETCH_STREAMS, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM } from '../actions/types';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload, 'id')\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/trankhuong/Desktop/streams/client/src/reducers/streamReducers.js"],"names":["_","FETCH_STREAM","FETCH_STREAMS","CREATE_STREAM","EDIT_STREAM","DELETE_STREAM","state","action","type","payload","id","mapKeys","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,aALJ,QAMO,kBANP;AAQA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,YAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACJ,SAAKN,aAAL;AACI,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACJ,SAAKL,WAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACJ,SAAKP,aAAL;AACI,aAAO,EAAE,GAAGI,KAAL;AAAY,WAAGN,CAAC,CAACW,OAAF,CAAUJ,MAAM,CAACE,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACJ,SAAKJ,aAAL;AACI,aAAOL,CAAC,CAACY,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACE,OAArB,CAAP;;AACJ;AACI,aAAOH,KAAP;AAZR;AAcH,CAfD","sourcesContent":["import _ from 'lodash'\nimport {\n    FETCH_STREAM,\n    FETCH_STREAMS,\n    CREATE_STREAM,\n    EDIT_STREAM,\n    DELETE_STREAM\n} from '../actions/types'\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_STREAM:\n            return { ...state, [action.payload.id]: action.payload }\n        case CREATE_STREAM:\n            return { ...state, [action.payload.id]: action.payload }\n        case EDIT_STREAM:\n            return { ...state, [action.payload.id]: action.payload }\n        case FETCH_STREAMS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') }\n        case DELETE_STREAM:\n            return _.omit(state, action.payload)\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}