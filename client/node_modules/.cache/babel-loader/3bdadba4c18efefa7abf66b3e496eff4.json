{"ast":null,"code":"var _jsxFileName = \"/Users/trankhuong/Desktop/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderAction() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"Cancel\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream?';\n    }\n\n    return `Are you sure you want to delete this stream with title: ${this.props.stream.title}`;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderAction(),\n      onDismiss: () => history.push('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/trankhuong/Desktop/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Modal","history","fetchStream","StreamDelete","Component","componentDidMount","props","match","params","id","renderAction","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACvCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ;AAUH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACpB,aAAO,8CAAP;AACH;;AACD,WAAQ,2DACJ,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KACjB,EAFL;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,eADV;AAEI,MAAA,OAAO,EAAE,KAAKH,aAAL,EAFb;AAGI,MAAA,OAAO,EAAE,KAAKD,YAAL,EAHb;AAII,MAAA,SAAS,EAAE,MAAMT,OAAO,CAACc,IAAR,CAAa,GAAb,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AAtCsC;;AAyC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeV,OAAO,CAClBiB,eADkB,EAElB;AAAEd,EAAAA;AAAF,CAFkB,CAAP,CAGbC,YAHa,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Modal from '../Modal'\nimport history from '../../history'\nimport { fetchStream } from '../../actions'\n\nclass StreamDelete extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id)\n    }\n\n    renderAction() {\n        return (\n            <React.Fragment>\n                <button className='ui button negative'>\n                    Delete\n            </button>\n                <button className='ui button'>\n                    Cancel\n            </button>\n            </React.Fragment>\n        )\n    }\n\n    renderContent() {\n        if (!this.props.stream) {\n            return 'Are you sure you want to delete this stream?'\n        }\n        return `Are you sure you want to delete this stream with title: ${\n            this.props.stream.title\n            }`\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal\n                    title='Delete Stream'\n                    content={this.renderContent()}\n                    actions={this.renderAction()}\n                    onDismiss={() => history.push('/')}\n                />\n            </div >\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(\n    mapStateToProps,\n    { fetchStream }\n)(StreamDelete)"]},"metadata":{},"sourceType":"module"}