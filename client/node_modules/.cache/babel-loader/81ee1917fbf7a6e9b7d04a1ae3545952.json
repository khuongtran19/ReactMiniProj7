{"ast":null,"code":"import streams from '../api/streams';\nimport history from '../history';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, EDIT_STREAM, DELETE_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post('/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/trankhuong/Desktop/streams/client/src/actions/index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","EDIT_STREAM","DELETE_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACIC,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,YAJJ,EAKIC,aALJ,EAMIC,WANJ,EAOIC,aAPJ,QAQO,SARP;AASA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMnB,OAAO,CAACoB,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGL,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB;AAEAM,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAEP,aADD;AACgBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AADlC,GAAD,CAAR;AAGApB,EAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACH,CARM;AAUP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMP,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,CAAY,UAAZ,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAEL,aADD;AACgBM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AADlC,GAAD,CAAR;AAGH,CANM;AAQP,OAAO,MAAMI,WAAW,GAAGC,EAAE,IAAI,MAAMV,QAAN,IAAkB;AAC/C,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAEN,YADD;AACeO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AADjC,GAAD,CAAR;AAGH,CANM;AAQP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAAC4B,KAAR,CAAe,YAAWF,EAAG,EAA7B,EAAgCX,UAAhC,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAEJ,WADD;AACcK,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AADhC,GAAD,CAAR;AAGH,CANM;AAQP,OAAO,MAAMQ,YAAY,GAAGH,EAAE,IAAI,MAAMV,QAAN,IAAkB;AAChD,QAAMhB,OAAO,CAAC8B,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAV,EAAAA,QAAQ,CAAC;AACLL,IAAAA,IAAI,EAAEH,aADD;AACgBI,IAAAA,OAAO,EAAEc;AADzB,GAAD,CAAR;AAGH,CANM","sourcesContent":["import streams from '../api/streams'\nimport history from '../history'\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAM,\n    FETCH_STREAMS,\n    EDIT_STREAM,\n    DELETE_STREAM\n} from './types'\nexport const signIn = userId => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    const { userId } = getState().auth\n    const response = await streams.post('/streams', { ...formValues, userId })\n\n    dispatch({\n        type: CREATE_STREAM, payload: response.data\n    })\n    history.push('/')\n}\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams')\n\n    dispatch({\n        type: FETCH_STREAMS, payload: response.data\n    })\n}\n\nexport const fetchStream = id => async dispatch => {\n    const response = await streams.get(`/streams/${id}`)\n\n    dispatch({\n        type: FETCH_STREAM, payload: response.data\n    })\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.patch(`/streams/${id}`, formValues)\n\n    dispatch({\n        type: EDIT_STREAM, payload: response.data\n    })\n}\n\nexport const deleteStream = id => async dispatch => {\n    await streams.delete(`/streams/${id}`)\n\n    dispatch({\n        type: DELETE_STREAM, payload: id\n    })\n}\n"]},"metadata":{},"sourceType":"module"}