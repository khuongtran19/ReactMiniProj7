{"ast":null,"code":"var _jsxFileName = \"/Users/trankhuong/Desktop/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.createStream(formValues);\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // this.props.handleSubmit <- provide by redux form\n      React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, \"Submit\"))\n    );\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream\n})(formWrapped);","map":{"version":3,"sources":["/Users/trankhuong/Desktop/streams/client/src/components/streams/StreamCreate.js"],"names":["React","connect","createStream","StreamForm","StreamCreate","Component","onSubmit","formValues","props","render","handleSubmit","renderInput","validate","errors","title","description","formWrapped","reduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACvCC,QADuC,GAC3BC,UAAD,IAAgB;AACvB,WAAKC,KAAL,CAAWN,YAAX,CAAwBK,UAAxB;AACH,KAHsC;AAAA;;AAKvCE,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AACA;AACI,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,YAAX,CAAwB,KAAKJ,QAA7B,CADd;AAEI,QAAA,SAAS,EAAC,eAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,SAAS,EAAE,KAAKK,WAFpB;AAGI,QAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAOI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,SAAS,EAAE,KAAKA,WAFpB;AAGI,QAAA,KAAK,EAAC,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,eAWI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAFJ;AAgBH;;AAtBsC;;AAyB3C,MAAMC,QAAQ,GAAGL,UAAU,IAAI;AAC3B,QAAMM,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACN,UAAU,CAACO,KAAhB,EAAuB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACH;;AACD,MAAI,CAACP,UAAU,CAACQ,WAAhB,EAA6B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAXD;;AAaA,MAAMG,WAAW,GAAGC,SAAS,CAAC;AAC1BC,EAAAA,IAAI,EAAE,cADoB;AAE1BN,EAAAA;AAF0B,CAAD,CAAT,CAGjBR,YAHiB,CAApB;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAgCc,WAAhC,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStream } from '../../actions'\nimport StreamForm from './StreamForm'\n\nclass StreamCreate extends React.Component {\n    onSubmit = (formValues) => {\n        this.props.createStream(formValues)\n    }\n\n    render() {\n        return (\n            // this.props.handleSubmit <- provide by redux form\n            <form\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n                className='ui form error'>\n                <Field\n                    name='title'\n                    component={this.renderInput}\n                    label='Title' />\n                <Field\n                    name='description'\n                    component={this.renderInput}\n                    label='Description' />\n                <button className='ui button primary'>Submit</button>\n            </form>\n        )\n    }\n}\n\nconst validate = formValues => {\n    const errors = {}\n\n    if (!formValues.title) {\n        errors.title = 'You must enter a title'\n    }\n    if (!formValues.description) {\n        errors.description = 'You must enter a description'\n    }\n\n    return errors\n}\n\nconst formWrapped = reduxForm({\n    form: 'streamCreate',\n    validate\n})(StreamCreate)\n\nexport default connect(null, { createStream })(formWrapped)"]},"metadata":{},"sourceType":"module"}